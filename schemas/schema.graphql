# import User from "user.graphql"
# import Auth from "auth.graphql"
# import Notification from "notification.graphql"
# import Channel from "channel.graphql"
# import Message from "message.graphql"
# import Friend from "friend.graphql"
# import Membership from "membership.graphql"

type Query {
  users(user: UserQueryInput, includeUser: Boolean): [User!]!
  user(id: ID!): User
  me: User
  findPassword(email: String!): Boolean
  messages: [Message!]!
  channels: [Channel!]!
  friends: [User!]!
}

type Mutation {
  signInEmail(email: String! password: String!): AuthPayload!
  signInGoogle(socialUser: SocialUserInput!): AuthPayload!
  signInFacebook(socialUser: SocialUserInput!): AuthPayload!
  signInApple(socialUser: SocialUserInput!): AuthPayload!
  signUp(user: UserInput!): AuthPayload!
  addNotificationToken(notification: NotificationCreateInput!): Notification
  removeNotificationToken(token: String!): Int
  updateProfile(user: UserInput!): User
  addFriend(friendId: ID!): User
  deleteFriend(friendId: ID!): User
  createChannel(channel: ChannelInput): Channel
  updateChannel(channel: ChannelInput): Int
  deleteChannel(channelId: ID!): Int
  setOnlineStatus(isOnline: Boolean): Int
}

type Subscription {
  userSignedIn: User
  userUpdated: User
  friendChanged(userId: ID!): FriendSub
}
