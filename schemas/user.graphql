# import Notification from "notification.graphql"
# import Channel from "channel.graphql"

scalar Date
scalar DateTime

enum Gender {
  MALE,
  FEMALE
}

enum AuthType {
  EMAIL,
  FACEBOOK,
  GOOGLE,
  APPLE
}

type User {
  id: ID!
  email: String
  name: String
  nickname: String
  thumbURL: String
  photoURL: String
  birthday: Date
  gender: Gender
  socialId: String
  authType: AuthType
  phone: String
  verified: Boolean
  statusMessage: String
  isOnline: Boolean
  lastSignedIn: DateTime
  notifications: [Notification]
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}
"""
Simple wrapper around our list of launches that contains a cursor to the
last item in the list. Pass this cursor to the launches query to fetch results
after these.
"""
type UsersConnection {
  cursor: String
  hasMore: Boolean!
  results: [User]!
}

input UserInput {
  email: String!
  password: String!
  name: String
  nickname: String
  birthday: Date
  gender: Gender
  phone: String
  statusMessage: String
}

input UserProfileInput {
  name: String
  nickname: String
  birthday: Date
  gender: Gender
  phone: String
  thumbURL: String
  photoURL: String
  statusMessage: String
}

input UserQueryInput {
  email: String
  name: String
  nickname: String
  birthday: Date
  gender: Gender
  phone: String
}

input SocialUserInput {
  socialId: String!
  authType: AuthType!
  email: String
  photoURL: String
  thumbURL: String
  name: String
  nickname: String
  birthday: Date
  gender: Gender
  phone: String
}
